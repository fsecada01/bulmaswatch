@use "sass:color";
@use "sass:list";
@use "bulma/sass" as bulma;
@use "utilities/light-initial-variables" as iv;
// Overrides
@if iv.$bulmaswatch-import-font {
  @import url("https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap");
}

.button {
  text-transform: uppercase;
}

.notification {
  @each $name, $pair in bulma.$colors {
    $color: list.nth($pair, 1);
    $color-invert: list.nth($pair, 2);

    &.is-#{$name} {
      a:not(.button) {
        color: $color-invert;
        text-decoration: underline;
      }
    }
  }
}

.navbar {
  border-radius: $radius;

  .navbar-item,
  .navbar-link {
    font-size: 0.875rem;
    font-weight: 700;
    text-transform: uppercase;

    &.is-active {
      background-color: color.adjust($grey-dark, $lightness: -5%);

      @include until($navbar-breakpoint) {
        background-color: rgba($grey-dark, 0.25);
      }
    }
  }

    @include from($navbar-breakpoint) {
    .navbar-dropdown .navbar-item {
      color: $text;
    }
  }

  @include until($navbar-breakpoint) {
    .navbar-menu {
      background-color: inherit;
    }
  }

  &:not([class*="is-"]) .navbar-burger span {
    background-color: $white-ter;
  }

  @each $name, $pair in bulma.$colors {
    $color: list.nth($pair, 1);
    $color-invert: list.nth($pair, 2);

    &.is-#{$name} {
      @include until($navbar-breakpoint) {
        .navbar-item,
        .navbar-link {
          color: rgba($color-invert, 0.7);
          &.is-active {
            color: $color-invert;
          }
        }
      }
    }
  }

  &.is-transparent {
    background-color: transparent;
  }
}

.hero {
  // Colors
  .navbar {
    background-color: $grey-dark;
  }
  @each $name, $pair in bulma.$colors {
    $color: list.nth($pair, 1);
    $color-invert: list.nth($pair, 2);

    &.is-#{$name} {
      .navbar {
        background: none;
      }
    }
  }
}

.pagination-link,
.pagination-next,
.pagination-previous {
  color: $primary;
  background-color: $pagination-background-color;
}
